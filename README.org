#+TITLE: Leuven shell configuration files

#+PROPERTY:  header-args :tangle bin/rc-common-settings-shell-leuven-new

#+name: current-time
#+begin_src emacs-lisp :eval yes :results silent :tangle no
(format-time-string "<%Y%m%d.%H%M>")
#+end_src

#+begin_src shell :noweb yes
#!/usr/bin/env sh

# Last modified: <<current-time()>>
#+end_src

Welcome to the *Leuven shell configuration files* project!  This repository is
your go-to solution for streamlining and enhancing your terminal
experience. Whether you're a developer, sysadmin, or enthusiast, this
configuration provides a well-organized, modular, and efficient way to customize
your shell environment.

* What's inside?

This project includes a comprehensive set of configuration files and scripts
designed to optimize your *Bash* or *Zsh* shell. Here's a quick overview of what
you'll find:

- *Environment variables:* Define global variables for seamless shell behavior.
- *Paths:* Configure system paths to access your tools effortlessly.
- *Aliases:* Simplify commands with powerful shortcuts.
- *Functions:* Extend shell functionality with reusable scripts.
- *Key bindings:* Speed up workflows with custom key mappings.
- *Prompt configuration:* Personalize your shell prompt with style and utility.
- *Autosuggestions:* Type less with intelligent command predictions.
- *Completions:* Enjoy enhanced tab completions for efficiency.
- *Universal variables:* Set shared variables across sessions and systems.
- *Abbreviations:* Save time with shorthand command expansions.
- *Event handling:* Automate responses to shell events for smarter scripting.
- *Miscellaneous settings:* Additional tweaks and optimizations.

* Why use Leuven shell configurations?

- *Highly modular:* Each feature is encapsulated, making it easy to modify or
  extend.
- *Cross-compatible:* Works seamlessly with both *Bash* and *Zsh*.
- *Optimized for productivity:* Every setting is curated to save time and reduce
  friction.
- *Customizable:* Add or tweak configurations to fit your unique needs.

* Getting started

** Try online

You can try Shell-leuven-new without installing it by running the following
commands in your shell:

- *For Bash users*

  #+begin_src shell :tangle no
  # Load common settings.
  curl -sSL https://raw.githubusercontent.com/fniessen/shell-leuven-new/refs/heads/master/bin/rc-common-settings-shell-leuven-new | bash -

  # Load Bash-specific settings.
  curl -sSL https://raw.githubusercontent.com/fniessen/shell-leuven-new/refs/heads/master/bin/rc-bash-specific-settings-shell-leuven-new | bash -
  #+end_src

- *For Zsh users*

  #+begin_src shell :tangle no
  # Load common settings.
  curl -sSL https://raw.githubusercontent.com/fniessen/shell-leuven-new/refs/heads/master/bin/rc-common-settings-shell-leuven-new | zsh -

  # Load Zsh-specific settings.
  curl -sSL https://raw.githubusercontent.com/fniessen/shell-leuven-new/refs/heads/master/bin/rc-zsh-specific-settings-shell-leuven-new | zsh -
  #+end_src

These commands will download and execute the configuration files directly in
your current shell session, enabling you to explore Shell-leuven-new's features
right away.

** Automating custom configuration

To automatically source custom settings files on shell startup, do the
following:

1. Clone the repository:

   #+begin_src shell :tangle no
   git clone git@github.com:fniessen/shell-leuven-new.git
   #+end_src

2. Integrate configurations with your shell:

   - *For Bash users*

     Add the following lines to your =.bashrc=:

     #+begin_src shell :tangle no
     source /PATH/TO/shell-leuven-new/bin/rc-common-settings-shell-leuven-new
     source /PATH/TO/shell-leuven-new/bin/rc-bash-specific-settings-shell-leuven-new  # For Bash.
     #+end_src

   - *For Zsh users*

     Add the following lines to your =.zshrc=:

     #+begin_src shell :tangle no
     source /PATH/TO/shell-leuven-new/bin/rc-common-settings-shell-leuven-new
     source /PATH/TO/shell-leuven-new/bin/rc-zsh-specific-settings-shell-leuven-new   # For Zsh.
     #+end_src

3. Reload your shell:

   #+begin_src shell :tangle no
   source ~/.bashrc  # For Bash.
   # OR
   source ~/.zshrc  # For Zsh.
   #+end_src

* 1. Environment variables

These are variables that are accessible to all parts of the shell
environment.

#+begin_src shell :noweb yes :tangle bin/rc-bash-specific-settings-shell-leuven-new
#!/usr/bin/env bash

# Last modified: <<current-time()>>
#+end_src

#+begin_src shell :noweb yes :tangle bin/rc-zsh-specific-settings-shell-leuven-new
#!/usr/bin/env zsh

# Last modified: <<current-time()>>
#+end_src

** Configuring colors for 'ls'

The following example sets up ~LS_COLORS~ to define color schemes for ~ls~ based
on file types.

#+begin_src shell
if [ -r ~/.dircolors ]; then
    eval "$(dircolors ~/.dircolors)"
fi
#+end_src

The ~dircolors~ command reads a configuration file (e.g., =~/.dircolors=) to define
color mappings and assigns the output to the ~LS_COLORS~ variable.

** Customizing time format for 'ls'

The ~TIME_STYLE~ environment variable customizes the display of dates and times in
the output of the ~ls~ command. For instance:

#+begin_src shell
# Configure the time format for `ls` to display dates as "YYYY-MM-DD Day HH:MM".
export TIME_STYLE=+"%Y-%m-%d %a %H:%M"
#+end_src

This setting formats timestamps in a human-readable ISO-like format with the day
of the week included.

* 2. Paths

These are specific paths to files and directories.

For example, the ~PATH~ environment variable tells the shell where to look for
executable files.

#+begin_src shell
# Add ~/bin to PATH if not already present.
if [[ ":$PATH:" != *":$HOME/bin:"* ]]; then
    export PATH="$HOME/bin:$PATH"
fi

# Add ~/winbin to PATH if not already present.
if [[ ":$PATH:" != *":$HOME/winbin:"* ]]; then
    export PATH="$HOME/winbin:$PATH"
fi
#+end_src

* 3. Aliases

These are shortened names for commands.

** Listing directories and files

The following aliases enhance the functionality of the ~ls~ command, making it
easier to navigate and view directory contents:

#+begin_src shell
# Run ll to view detailed information about the contents of the current directory.
alias ll='ls -l'

# List only directories in the current directory.
alias lsd='ls -d */'

# List files and directories in a columnar format with type indicators.
alias l='ls -CF'
#+end_src

** Changing working directory

*** Navigating up levels

#+begin_src shell
# Define aliases for changing directory up levels.
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
#+end_src

#+begin_src shell
# Define an alias for changing to the previous directory.
alias -- -='cd -'
#+end_src

*** Viewing the directory stack

#+begin_src shell
# Display the current directory stack with indices.
alias d='dirs -v | head -n 10'  # Show the top 10 entries in the stack.
#+end_src

You can use the directory stack to quickly navigate to previously visited
directories. Normally, ~cd -1~ moves to the *previous directory* in the stack, ~cd -2~
to the one before that, and so on. However, with the following aliases, you can
simply type the number of the stack entry you want to visit, like ~1~.

*** Quick access to recently used directories

#+begin_src shell
# Define aliases for switching to specific stack entries.
alias 1='cd -1'  # Move to the most recent directory.
alias 2='cd -2'  # Move to the second most recent directory.
alias 3='cd -3'
alias 4='cd -4'
alias 5='cd -5'
alias 6='cd -6'
alias 7='cd -7'
alias 8='cd -8'
alias 9='cd -9'
#+end_src

*** Windows Subsystem For Linux (WSL) specific aliases

If you are running the script in WSL, these aliases provide seamless interaction
with Windows drives and applications:

#+begin_src shell
# Check if the script is running in WSL.
if [[ "$WSL_DISTRO_NAME" ]]; then
    # Aliases for quick access to Windows drives.
    alias c:='cd /mnt/c'
    alias d:='cd /mnt/d'
fi
#+end_src

#+begin_src shell
# Check if the script is running in WSL.
if [[ "$WSL_DISTRO_NAME" ]]; then
    # Alias for opening Windows File Explorer.
    alias explorer='explorer.exe'

    # Aliases for opening files or URLs with Windows default applications.
    alias open='explorer.exe'
    alias xdg-open='explorer.exe'
fi
#+end_src

** Command history search

Search the command history for a specified term, ignoring case sensitivity.

#+begin_src shell
# Alias 'hgrep' to search command history with case-insensitive grep.
alias hgrep='history | grep -i'
#+end_src

** Ripgrep enhancements

If the ~rg~ (Ripgrep) command is available, several customizations and aliases are
provided to enhance its functionality:

#+begin_src shell
# Check if 'rg' command is available.
if command -v rg > /dev/null 2>&1; then
#+end_src

#+begin_src shell
    # Define a function 'rgc' to always include the '-C 1' option for context
    # lines.
    rgc() {
        rg -C 1 "$@" | sed '/'"$@"'/! s/^.*$/\x1b[90m&\x1b[0m/; s/\('"$@"'\)/\x1b[1;31m\1\x1b[0m/g'
    }
#+end_src

#+begin_src shell
    alias rg='rg --hidden'
#+end_src

#+begin_src shell
    # Alias 'rgno' to 'rg -l' for listing filenames with matches.
    alias rgno='rg -l'
#+end_src

#+begin_src shell
    # Define a function 'rgext' for a case-insensitive search within files
    # matching a specific extension.
    rgext() {
        if [[ $# -ne 2 ]]; then
            printf "Usage: rgext EXTENSION PATTERN\n"
            return 2
        fi
        rg --glob "*.$1" -i -C 1 "$2"
    }
#+end_src

#+begin_src shell
fi
#+end_src

* 4. Functions

These are blocks of code that can be executed by name.

#+begin_src shell :tangle no
confirm() {
    # Prompt the user for confirmation with a customizable message.
    read -p "$1 [y/N] " response
    case "$response" in
        [yY][eE][sS]|[yY])
            # Confirm with yes or y.
            return 0
            ;;
        ,*)
            # Default to no.
            return 1
            ;;
    esac
}

empty_trash() {
    # Confirm before proceeding.
    if confirm "Are you sure you want to empty the trash?"; then
        # Remove contents of the trash directory.
        if [[ "$OSTYPE" == "darwin"* ]]; then
            rm -rf ~/.Trash/*
        else
            rm -rf ~/.local/share/Trash/*
        fi
        printf "Trash emptied.\n"
    else
        printf "Operation cancelled.\n"
    fi
}
#+end_src

* 5. Key bindings

These are mappings of keys to commands.

- ~C-l~: clear the terminal screen.

** Cursor movement

- ~C-a~: Move cursor to the beginning of the line.
- ~C-e~: Move cursor to the end of the line.
- ~C-b~: Move cursor backward one character.
- ~C-f~: Move cursor forward one character.
- ~M-b~ or ~C-<left>~ or ~M-<left>~: Move cursor backward one word.
- ~M-f~ or ~C-<right>~ or ~M-<right>~: Move cursor forward one word.

** Command History and Search

- ~<up>~: Navigate through command history.
- ~C-r~: Initiate a reverse search through command history.
- ~C-s~: Initiate a forward search through command history.
- ~M-<up>~ (with input): Search command history for commands starting with the current input.
- ~M-<down>~ (with input): Search command history for the next matching command.

** Command Editing

- ~C-d~: Delete the character under the cursor or exit the shell if the line is empty.
- ~C-k~: Kill (cut) text from the cursor to the end of the line.
- ~C-y~: Yank (paste) the previously killed text.
- ~C-c~: Cancel the current command (and clear the command line).
- ~M-e~: Open the current command line in your preferred text editor.
- ~C-u~: Clear the line from the cursor to the beginning.

** Case and Word Manipulation

- ~M-c~: Capitalize the current word.
- ~M-u~: Uppercase the current word.
- ~M-l~: Lowercase the current word.
- ~M-t~: Transpose (swap) the last two words.

** Shell Utilities

- ~M-w~: Show short description of a command.
- ~M-d~: Show documentation for current command.
- ~M-p~: Prepend 'sudo' to the current command.
- ~M-.~: Insert the last argument of the previous command.
- ~C-z~: Activate complete-and-search functionality.

** Custom key bindings

You can create custom key bindings.

For example:

Refresh command line

| Key binding | Meaning                                |
|-------------+----------------------------------------|
| C-M-u       | Move to parent directory               |
| M-s         | Prepend 'sudo ' to the current command |
| M-S-l       | List directory contents                |

*** ls

For Bash:

#+begin_src shell :tangle bin/rc-bash-specific-settings-shell-leuven-new
# M-S-l: Send the string 'ls' followed by a newline.
bind '"\eL": "ls\n"'
#+end_src

For Zsh:

#+begin_src shell :tangle bin/rc-zsh-specific-settings-shell-leuven-new
# M-S-l: Send the string 'ls' followed by a newline.
bindkey -s '\eL' 'ls\n'
#+end_src

*** C-M-u: Move to parent directory

This configuration binds the ~C-M-u~ key combination to the ~up-directory~ function
in both Bash and Zsh shells. The function changes the current directory to its
parent (~cd ..~).

For Bash:

#+begin_src shell :tangle bin/rc-bash-specific-settings-shell-leuven-new
# C-M-u: Move to parent directory.
bind '"\e\C-u": "cd ..\n"'
#+end_src

For Zsh:

#+begin_src shell :tangle bin/rc-zsh-specific-settings-shell-leuven-new
# C-M-u: Move to parent directory.
up-directory() {
  cd .. && zle reset-prompt
}
zle -N up-directory
bindkey '\e\C-u' up-directory
#+end_src

*Key note:* In Zsh, the *prompt* is refreshed to *reflect the new directory* after the
change.

*** M-s: Prepend sudo

This configuration binds the ~M-s~ key combination to prepend ~sudo~ to the current
command in both Bash and Zsh shells.

For Bash:

#+begin_src shell :tangle bin/rc-bash-specific-settings-shell-leuven-new
# M-s: Prepend sudo.
bind '"\es": "\C-asudo \C-e"'
#+end_src

For Zsh:

#+begin_src shell :tangle bin/rc-zsh-specific-settings-shell-leuven-new
# M-s: Prepend sudo.
prepend-sudo() {
  [[ -z $BUFFER ]] && zle up-history
  LBUFFER="sudo $LBUFFER"
}
zle -N prepend-sudo
bindkey "\es" prepend-sudo
#+end_src

*** Copy the previous word

For Bash:

#+begin_src shell :tangle bin/rc-bash-specific-settings-shell-leuven-new
# Function to copy the previous word.
copy-prev-word() {
    local words=($READLINE_LINE)
    local cursor_position=$READLINE_POINT
    local word_index=${#words[@]}

    # Find the word before the cursor
    for ((i=${#words[@]}-1; i>=0; i--)); do
        if ((${#words[i]} + ${#words[i+1]} + 1 < cursor_position)); then
            word_index=$i
            break
        fi
        cursor_position=$((cursor_position - ${#words[i]} - 1))
    done

    # Insert the previous word at the cursor position
    if ((word_index > 0)); then
        READLINE_LINE="${READLINE_LINE:0:READLINE_POINT}${words[word_index-1]}${READLINE_LINE:READLINE_POINT}"
        READLINE_POINT=$((READLINE_POINT + ${#words[word_index-1]}))
    fi
}

# Bind the function to C-x C-d.
bind -x '"\C-x\C-d":copy-prev-word'
#+end_src

For Zsh:

#+begin_src shell :tangle bin/rc-zsh-specific-settings-shell-leuven-new
bindkey '^X^D' copy-prev-word
# Instead of C-M-_.
#+end_src

*** Run help

For Bash:

#+begin_src shell :tangle bin/rc-bash-specific-settings-shell-leuven-new
# Function to run help on the current command
run-help() {
    # Get the first word of the last command (i.e., the last command in the
    # pipeline or sequence).
    local cmd=$(printf "%s" "$READLINE_LINE" | awk -F'\\||;' '{print $NF}' | awk '{print $1}')

    # Check if there's a command to process.
    if [[ -n "$cmd" ]]; then
        # Show the man page for the command (if it exists).
        man "$cmd" 2>/dev/null || {
            # If no man page, use the `whatis` command for a brief description.
            whatis "$cmd" || printf "No help available for '%s'.\n" "$cmd"
        }
    else
        printf "No command to show help for.\n"
        return 1
    fi
}

# Bind the function run-help to M-h.
bind -x '"\eh": run-help'
#+end_src

For Zsh, use 'M-h'.

** See all current key bindings

: bind -P

| Abort and Exit                      |
| Line and Word Movement              |
| History Navigation                  |
| Editing                             |
| Case and Word Manipulation          |
| Command Completion                  |
| Miscellaneous                       |
| Bracketed Paste                     |
| Character Deletion and Modification |
| Keyboard Macros                     |
| Character Search                    |
| Display and Redraw                  |
| Command and History Expansion       |
| Line and Word Editing               |
| Completion and Expansion            |
| Other Commands                      |


From Zsh, in table:
| C-x ? | _complete_debug                         |
| C-x a | _expand_alias                           |
| C-x c | _correct_word (or _correct_filename ??) |
| C-x d | _list_expansions                        |
| C-x e | _expand_word                            |
| C-x h | _complete_help                          |
| C-x m | _most_recent_file                       |
| M-a   | accept-and-hold                         |
| M-g   | get-line                                |


|                                       | Zsh function                        | Bash                                   |                                                                                                                                                  |
|---------------------------------------+-------------------------------------+----------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------|
| M-w                                   | copy-region-as-kill                 |                                        |                                                                                                                                                  |
| M-q                                   | push-line                           |                                        |                                                                                                                                                  |
| M-h                                   | run-help                            |                                        |                                                                                                                                                  |
| C-h, C-<backspace>                    | backward-delete-char                | backward-delete-char                   | Backward Delete Character                                                                                                                        |
| M-\                                   |                                     | delete-horizontal-space                | Delete Horizontal Space                                                                                                                          |
| C-x e                                 |                                     | call-last-kbd-macro                    | Call Last Keyboard Macro                                                                                                                         |
| C-x (                                 |                                     | start-kbd-macro                        | Start Keyboard Macro                                                                                                                             |
| C-x )                                 |                                     | end-kbd-macro                          | End Keyboard Macro                                                                                                                               |
| C-]                                   |                                     | character-search                       | Character Search                                                                                                                                 |
| C-M-]                                 |                                     | character-search-backward              | Character Search Backward                                                                                                                        |
| C-l                                   | clear-screen                        |                                        |                                                                                                                                                  |
| C-M-l                                 |                                     | clear-display                          | Clear Display                                                                                                                                    |
| C-M-i                                 |                                     | dynamic-complete-history               | Dynamic Complete History                                                                                                                         |
| M-^                                   |                                     | history-expand-line                    | History Expand Line                                                                                                                              |
| C-x C-e                               |                                     | edit-and-execute-command               | Edit and Execute Command                                                                                                                         |
| C-x C-x                               | exchange-point-and-mark             | exchange-point-and-mark                | Exchange Point and Mark                                                                                                                          |
| C-M-r, M-r                            |                                     | revert-line                            | Revert Line                                                                                                                                      |
| C-u                                   | kill-whole-line XXX                 | unix-line-discard                      | Unix Line Discard                                                                                                                                |
| M-g                                   |                                     | glob-complete-word                     | Glob Complete Word                                                                                                                               |
| C-x *                                 | expand-word                         | glob-expand-word                       | Glob Expand Word                                                                                                                                 |
| C-x g                                 | list-expand                         | glob-list-expansions                   | Glob List Expansions                                                                                                                             |
| M-*                                   |                                     | insert-completions                     | Insert Completions                                                                                                                               |
| C-x !                                 |                                     | possible-command-completions           | Possible Command Completions                                                                                                                     |
| C-o                                   |                                     | operate-and-get-next                   | Operate and Get Next                                                                                                                             |
| M-&                                   |                                     | tilde-expand                           | Tilde Expand                                                                                                                                     |
| C-M-y                                 |                                     | yank-nth-arg                           | Yank Nth Argument                                                                                                                                |
| C-g                                   | send-break                          | abort                                  | Abort                                                                                                                                            |
| C-a                                   | beginning-of-line                   | beginning-of-line                      | Move to Beginning of Line                                                                                                                        |
| C-e                                   | end-of-line                         | end-of-line                            | Move to End of Line                                                                                                                              |
| C-b                                   | backward-char                       | backward-char                          | Backward Character                                                                                                                               |
| C-f                                   | forward-char                        | forward-char                           | Forward Character                                                                                                                                |
| M-b                                   | backward-word                       | backward-word, shell-backward-word     | Backward Word                                                                                                                                    |
| M-f                                   | forward-word                        | forward-word, shell-forward-word       | Forward Word                                                                                                                                     |
| M-<                                   | beginning-of-buffer-or-history      | beginning-of-history                   | Beginning of History                                                                                                                             |
| M->                                   | end-of-buffer-or-history            | end-of-history                         | End of History                                                                                                                                   |
| C-p                                   | up-line-or-history                  | previous-history                       | Previous History                                                                                                                                 |
| <up>                                  | up-line-or-history                  |                                        | Previous History                                                                                                                                 |
| C-n                                   | down-line-or-history                | next-history                           | Next History                                                                                                                                     |
| <down>                                | down-line-or-history                |                                        | Next History                                                                                                                                     |
| C-r                                   | history-incremental-search-backward | reverse-search-history                 | Reverse Search History                                                                                                                           |
| C-s                                   | history-incremental-search-forward  | forward-search-history                 | Forward Search History                                                                                                                           |
| M-p                                   | history-search-backward             | non-incremental-reverse-search-history | Non-Incremental Reverse Search                                                                                                                   |
| M-n                                   | history-search-forward              | non-incremental-forward-search-history | Non-Incremental Forward Search                                                                                                                   |
| M-[A                                  |                                     | history-search-backward                | History Search Backward                                                                                                                          |
| M-[B                                  |                                     | history-search-forward                 | History Search Forward                                                                                                                           |
| C-d                                   | delete-char-or-list                 | delete-char                            | Delete Character Under Cursor                                                                                                                    |
| C-k                                   | kill-line                           | kill-line                              | Kill Line                                                                                                                                        |
| M-d                                   | kill-word                           | kill-word                              | Kill Word                                                                                                                                        |
| C-M-h, C-M-<backspace>, M-<backspace> | backward-kill-word                  | backward-kill-word                     | Backward Kill Word                                                                                                                               |
| C-w                                   | backward-kill-word                  | unix-word-rubout                       | Unix Word Rubout                                                                                                                                 |
| C-t                                   | transpose-chars                     | transpose-chars                        | Transpose Characters                                                                                                                             |
| M-t                                   | transpose-words                     | transpose-words                        | Transpose Words                                                                                                                                  |
| C-_ (or C-x C-u)                      | undo                                | undo                                   | Undo                                                                                                                                             |
| C-y                                   | yank                                | yank                                   | Yank (Paste)                                                                                                                                     |
| M-., M-_                              | insert-last-word                    | yank-last-arg, insert-last-argument    | Yank (Insert) Last Argument                                                                                                                      |
| M-y                                   | yank-pop                            | yank-pop                               | Yank Pop                                                                                                                                         |
| M-c                                   | capitalize-word                     | capitalize-word                        | Capitalize Word                                                                                                                                  |
| M-u                                   | up-case-word                        | upcase-word                            | Uppercase Word                                                                                                                                   |
| M-l                                   | down-case-word                      | downcase-word                          | Lowercase Word                                                                                                                                   |
| C-i                                   | complete-word                       | complete                               | Complete `external command', `builtin command', `shell function', `alias', `suffix alias', `reserved word', `job', `parameter', or `corrections' |
| M-!                                   |                                     | complete-command                       | Complete Command                                                                                                                                 |
| M-! (after typing !!)                 | expand-history                      |                                        |                                                                                                                                                  |
| M-/                                   |                                     | complete-filename                      | Complete Filename                                                                                                                                |
| M-@                                   |                                     | complete-hostname                      | Complete Hostname                                                                                                                                |
| M-$                                   |                                     | complete-variable                      | Complete Variable                                                                                                                                |
| M-{                                   |                                     | complete-into-braces                   | Complete into Braces                                                                                                                             |
| M-?                                   | which-command XXX                   | possible-completions                   | Possible Completions                                                                                                                             |
| C-x /                                 |                                     | possible-filename-completions          | Possible Filename Completions                                                                                                                    |
| C-x @                                 |                                     | possible-hostname-completions          | Possible Hostname Completions                                                                                                                    |
| C-x ~                                 |                                     | possible-username-completions          | Possible Username Completions                                                                                                                    |
| C-x $                                 |                                     | possible-variable-completions          | Possible Variable Completions                                                                                                                    |
| M-#                                   |                                     | insert-comment                         | Insert Comment                                                                                                                                   |
| C-q                                   | quoted-insert                       | quoted-insert                          | Quoted Insert                                                                                                                                    |
| C-x C-v                               |                                     | display-shell-version                  | Display Shell Version                                                                                                                            |
| C-M-e                                 |                                     | shell-expand-line                      | Shell Expand Line                                                                                                                                |
| C-@                                   | set-mark-command                    | set-mark                               | Set Mark                                                                                                                                         |

: bindkey

* 6. Prompt configuration

This is the configuration of the terminal prompt. This includes things like the
colors, the text that is displayed, and the layout of the prompt.

#+begin_src shell :tangle bin/rc-bash-specific-settings-shell-leuven-new
# Customize PS1 prompt.

# Define a custom function to display the exit code in red if it's non-zero.
show_exit_code() {
    local exit_code=$?
    if [[ $exit_code -ne 0 ]]; then
        printf "\033[01;31m%s\033[00m\n" "$exit_code"
    else
        printf "%s" ""
    fi
}

# Set the PROMPT_COMMAND to call the custom function.
PROMPT_COMMAND='show_exit_code'



PS1='\n\
\[\e]0;\u@\h: \w\a\]\
${debian_chroot:+($debian_chroot)}\
\[\033[01;32m\]\u@\h\[\033[00m\]\
\[\033[01;30m\]:\[\033[00m\]\
\[\033[01;34m\]\w\[\033[00m\] \
\[\033[01;33m\]($(git branch 2>/dev/null | grep '^*' | colrm 1 2))\
\[\033[0m\]\n\$ '

PS1='\n\
\[\e]0;\u@\h: \w\a\]\
${debian_chroot:+($debian_chroot)}\
\[\033[01;32m\]\u@\h\[\033[00m\]\
\[\033[01;30m\]:\[\033[00m\]\
\[\033[01;34m\]\w\[\033[00m\]\
\[\033[01;33m\]$(__git_ps1)\
\[\033[0m\]\n\
\[\033[1m\]\$ \[\033[0m\]'

__git_ps1() {
    local git_info
    git_info="$(git rev-parse --is-inside-work-tree 2>/dev/null)"

    if [[ -z "$git_info" ]]; then
        return $?
    fi

    local branch
    if branch="$(git symbolic-ref --short -q HEAD 2>/dev/null)"; then
        : # We are on a branch, nothing to do here.
    else
        branch="$(git rev-parse --short HEAD 2>/dev/null)"
    fi

    local dirty=""                      # should be in red
    local staged=""                     # should be in magenta
    local stash=""                      # should be in blue
    local untracked=""                  # should be in green
    local outgoing=""                   # should be in yellow
    local incoming=""                   # should be in cyan

    if [[ -n "$(git diff --no-ext-diff --quiet || echo '*')" ]]; then
        dirty=" *dirty"
    fi

    if [[ -n "$(git diff --no-ext-diff --cached --quiet || echo '+')" ]]; then
        staged=" +staged"
    fi

    if git rev-parse --verify --quiet refs/stash >/dev/null; then
        stash=" \$stash"
    fi

    if git ls-files --others --exclude-standard --directory --no-empty-directory --error-unmatch -- ':/*' >/dev/null 2>/dev/null; then
        untracked=" ?untracked"
    fi

    local count_outgoing=0
    local count_incoming=0
    local upstream_branch

    if upstream_branch="$(git rev-parse --abbrev-ref @{u} 2>/dev/null)"; then
        count_outgoing=$(git rev-list --count --left-right @{u}...HEAD 2>/dev/null | awk '{print $2}')
        count_incoming=$(git rev-list --count --left-right @{u}...HEAD 2>/dev/null | awk '{print $1}')
    fi

    if (( count_outgoing > 0 )); then
        outgoing=" ↑$count_outgoing"
    fi

    if (( count_incoming > 0 )); then
        incoming=" ↓$count_incoming"
    fi

    local status_info="$dirty$staged$stash$untracked$outgoing$incoming"

    branch="${branch##refs/heads/}"
    printf -- " (%s)" "$branch$(tput setaf 6)${status_info:+$status_info}$(tput setaf 3)"
}

# XXX Make use of color_prompt variable?
#+end_src

* 7. Autosuggestions

These are suggestions for commands that are based on the current input. For
example, if you type ~ls~, the shell might show you suggestions for other commands
that start with ~ls~.

* 8. Completions

These are completions for commands and file paths. For example, if you type ~cd~,
the shell might show you a list of directories that you can change to.

* 9. Universal variables

These are variables that are shared by all shells. For example, the ~USER~
variable tells the shell your username.

* 10. Abbreviations

These are shortened names for words or phrases. For example, you might set an
abbreviation for the word git to g.

* 11. Event handling

This is the configuration of how the shell responds to events, such as key
presses and file system changes.

"Terminal Title"

* 12. Miscellaneous settings

This is a catch-all category for settings that don't fit into any of the other
categories.

# set -g fish_color_autosuggestion brblack
# set -g fish_color_match yellow

** Common settings

#+begin_src shell :tangle bin/rc-bash-specific-settings-shell-leuven-new
# Check if history search bindings are already set.
if ! bind -q history-search-backward &>/dev/null; then
    # If not set, configure Up and Down arrow keys for history search.
    bind '"\e[A": history-search-backward'
                                        # Up arrow: Search backward in command
                                        # history.
    bind '"\e[B": history-search-forward'
                                        # Down arrow: Search forward in command
                                        # history.
fi
#+end_src

#+begin_src shell
# Configure HISTCONTROL to ignore both leading space and consecutive duplicates.
export HISTCONTROL=ignoreboth
# === default in Ubuntu
#+end_src



#+begin_src shell :tangle bin/rc-bash-specific-settings-shell-leuven-new
# Enable case-insensitive directory completion.
bind "set completion-ignore-case on"
bind "set show-all-if-ambiguous on"
#+end_src




#+begin_src shell
# Set the number of commands to remember in the in-memory history.
export HISTSIZE=10000

# Set the history timestamp format to ISO8601 (yyyy-mm-dd hh:mm).
export HISTTIMEFORMAT="%Y-%m-%d %H:%M  "

# Exclude common navigation and administrative commands from history.
export HISTIGNORE="ls:cd:pwd:clear:history:exit:top:df"
#+end_src



#+begin_src shell :tangle bin/rc-bash-specific-settings-shell-leuven-new
# autopushd() {
#     if [[ -n "$BASH_VERSION" ]]; then
#         # For Bash.
#         old_dir="$(pwd)"
#         builtin cd "$@"
#         if [[ ":$DIRSTACK:" != *":$old_dir:"* ]]; then
#             echo "Bash - Pushing $old_dir onto the stack:"
#             pushd "$old_dir"
#         else
#             echo "Bash - Directory already in stack, not pushing."
#         fi
#     elif [[ -n "$ZSH_VERSION" ]]; then
#         # For Zsh.
#         old_dir="$(pwd)"
#         cd "$@"
#         if [[ ! -v dirstack || ":$DIRSTACK:" != *":$old_dir:"* ]]; then
#             echo "Zsh - Pushing $old_dir onto the stack:"
#             pushd "$old_dir"
#         else
#             echo "Zsh - Directory already in stack, not pushing."
#         fi
#     fi
# }
#
# alias cd='autopushd'
#+end_src

#+begin_src shell
export GREP_COLORS='ms=01;31:mc=01;31:sl=:cx=:fn=35:ln=32'
#+end_src

** Bash-specific settings

#+begin_src shell :tangle bin/rc-bash-specific-settings-shell-leuven-new
# Set a common history file.
HISTFILE=$HOME/.bash_history

# Set the number of history entries to save to the (on-disk history)
# file.
export HISTFILESIZE=20000

# Append to the history file instead of overwriting it.
shopt -s histappend

# Add history management to the existing PROMPT_COMMAND: after each
# command, append to the history file and reload it.
if [ -n "$PROMPT_COMMAND" ]; then
    PROMPT_COMMAND="$PROMPT_COMMAND; history -a; history -n"
else
    PROMPT_COMMAND="history -a; history -n"
fi
#+end_src

** Zsh-specific settings

#+begin_src shell :tangle bin/rc-zsh-specific-settings-shell-leuven-new
# Set a common history file.
HISTFILE=$HOME/.zsh_history

# Set the number of history entries to save to the (on-disk history)
# file.
SAVEHIST=20000

# Share history between all running sessions.
setopt SHARE_HISTORY

# Append commands to the history file incrementally, instead of
# overwriting the history file when the shell exits.
setopt INC_APPEND_HISTORY

# Append to the history file instead of overwriting it.
setopt APPEND_HISTORY

setopt HIST_IGNORE_SPACE
setopt HIST_SAVE_NO_DUPS
setopt HIST_EXPIRE_DUPS_FIRST

# Show full command history without line numbers.
alias history="history 0"
#+end_src

* Contribute to Shell-leuven-new

Your support and contributions help make *Shell-leuven-new* even better!  Whether
it's reporting issues, submitting patches, or simply showing your appreciation,
every bit counts. Here's how you can get involved:

** 🚩 Report issues

Found a bug?  [[https://github.com/fniessen/shell-leuven-new/issues/new][Let us know!]]

** 🛠️ Submit patches

Have ideas for improvement?  We'd love to see them!

Contributions are always welcome, and patches -- big or small -- are highly
appreciated.

- Fork the repository
- Make your changes
- Submit a pull request

We can't wait to see your contributions! 💡

** ❤️ Support with donations

If *Shell-leuven-new* has made your life easier or more enjoyable, consider
supporting its development:

👉 [[https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=VCVAS6KPDQ4JC&lc=BE&item_number=shell%2dleuven%2dnew&currency_code=EUR&bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHosted][Donate via PayPal]]

Your donation helps keep this project alive and growing!

Thank you for your support! 🙌

* License

Copyright (C) 2013-2025 Fabrice Niessen. All rights reserved.

Author: Fabrice Niessen \\
Keywords: shell bash zsh

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program. If not, see http://www.gnu.org/licenses/.

#+html: <a href="http://opensource.org/licenses/GPL-3.0">
#+html:   <img src="http://img.shields.io/:license-gpl-blue.svg" alt=":license-gpl-blue.svg" />
#+html: </a>
#+html: <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=VCVAS6KPDQ4JC&lc=BE&item_number=shell%2dleuven%2dnew&currency_code=EUR&bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHosted">
#+html:   <img src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" alt="btn_donate_LG.gif" />
#+html: </a>
